server.port = 8083

spring.application.name = companyManagement

messaging.producer.topic = stockMarketTopic
spring.kafka.consumer.bootstrap-servers = ec2-65-1-148-126.ap-south-1.compute.amazonaws.com:9092
spring.kafka.consumer.group-id= test-consumer-group
spring.kafka.consumer.auto-offset-reset = latest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers = ec2-65-1-148-126.ap-south-1.compute.amazonaws.com:9092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer


#Local MongoDB config
#spring.data.mongodb.database=companyManagement
#spring.data.mongodb.port=27017
#spring.data.mongodb.host=localhost



baseUrl = http://localhost:8084
stock.management.deleteStockPrices.uri = /api/v1.0/market/stock/delete
jwt.secret=secret


#dynamodb config

amazon.dynamodb.endpoint=dynamodb.ap-south-1.amazonaws.com
amazon.aws.accessKey=AKIAZ7X6CCXIUE7AXQ6C
amazon.aws.secretKey=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
amazon.aws.signingRegion = ap-south-1

#Metrics related configurations
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true